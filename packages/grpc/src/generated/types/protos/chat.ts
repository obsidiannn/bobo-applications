// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.181.2
//   protoc               v3.19.1
// source: protos/chat.proto

/* eslint-disable */
import { Metadata } from "@grpc/grpc-js";
import { type BoolValue } from "../google/protobuf/wrappers.js";

export const protobufPackage = "chat_proto";

export enum MessageType {
  TEXT = 0,
  IMAGE = 1,
  VIDEO = 2,
  FILE = 3,
  LINK = 4,
  UNRECOGNIZED = -1,
}

export interface Chat {
  id: string;
  creatorId: bigint;
  lastSequence: bigint;
  businessType: number;
  createdAt: bigint;
  updatedAt: bigint;
}

export interface Message {
  id: string;
  chatId: string;
  senderId: bigint;
  senderType: number;
  sequence: bigint;
  createdAt: bigint;
  updatedAt: bigint;
  deletedAt: bigint;
}

export interface FindByIdsRequest {
  ids: string[];
}

export interface ChatListResponse {
  chats: Chat[];
}

export interface RemoveUserRequest {
  id: string;
  userIds: bigint[];
}

export interface RemoveUserByIdsRequest {
  ids: string[];
  userId: bigint;
}

export interface RemoveUserByUserIdsRequest {
  userIds: bigint[];
}

export interface ChangeCreatorRequest {
  id: string;
  creatorId: bigint;
}

export interface SendUserMessageRequest {
  id: string;
  userId: bigint;
  type: MessageType;
  content: string;
  receiverUserIds: bigint[];
  msgId: string;
}

export interface SendBotMessageRequest {
  id: string;
  senderId: bigint;
  type: MessageType;
  content: string;
  msgId: string;
}

export interface SendBotMessageResponse {
  items: Message[];
}

export interface AddUserRequest {
  id: string;
  userIds: bigint[];
}

export interface ExitByIdsRequest {
  ids: string[];
  userIds: bigint[];
}

export interface DropByIdsRequest {
  ids: string[];
}

export interface ClearMessageByIdsRequest {
  ids: string[];
}

export interface ClearMessageByUserIdsRequest {
  userIds: bigint[];
}

export interface CreateRequest {
  /** userId 或 groupId 或 bot Id */
  creatorId: bigint;
  businessType: number;
  userIds: bigint[];
}

export interface ChatConfigRequest {
  id: string;
  userId: bigint;
  changeField: string;
  value: string;
}

export interface ChatConfigResponse {
  id: string;
  isTop: number;
  isMute: number;
  isShow: number;
  isHide: number;
}

export interface ChatProto {
  findByIds(request: FindByIdsRequest, metadata?: Metadata): Promise<ChatListResponse>;
  /** 发送消息 */
  sendUserMessage(request: SendUserMessageRequest, metadata?: Metadata): Promise<Message>;
  /** 机器人发送消息 todo */
  sendBotMessage(request: SendBotMessageRequest, metadata?: Metadata): Promise<Message>;
  /** 增加用户 */
  addUsers(request: AddUserRequest, metadata?: Metadata): Promise<BoolValue>;
  /** 移除用户 */
  removeUsers(request: RemoveUserRequest, metadata?: Metadata): Promise<BoolValue>;
  /** 改变创建者 */
  changeCreator(request: ChangeCreatorRequest, metadata?: Metadata): Promise<BoolValue>;
  /** 创建会话 */
  create(request: CreateRequest, metadata?: Metadata): Promise<Chat>;
  /** 退出会话 */
  exitByIds(request: ExitByIdsRequest, metadata?: Metadata): Promise<BoolValue>;
  /** 删除会话 */
  dropByIds(request: DropByIdsRequest, metadata?: Metadata): Promise<BoolValue>;
  /** 清空会话消息 */
  clearMessageByIds(request: ClearMessageByIdsRequest, metadata?: Metadata): Promise<BoolValue>;
  /** 删除某用户所有消息 */
  clearMessageByUserIds(request: ClearMessageByUserIdsRequest, metadata?: Metadata): Promise<BoolValue>;
  removeUserByIds(request: RemoveUserByIdsRequest, metadata?: Metadata): Promise<BoolValue>;
  removeUserByUserIds(request: RemoveUserByUserIdsRequest, metadata?: Metadata): Promise<BoolValue>;
  /** 修改 会话配置 */
  changeChatConfig(request: ChatConfigRequest, metadata?: Metadata): Promise<ChatConfigResponse>;
}
